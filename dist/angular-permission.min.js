/**
 * angular-permission
 * Route permission and access control as simple as it can get
 * @version v1.2.0 - 2015-12-28
 * @link http://www.rafaelvidaurre.com
 * @author Rafael Vidaurre <narzerus@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */

!function(){"use strict";angular.module("permission").service("Authorization",["$q","PermissionStore",function(a,b){function c(a,b){return d(a),e(a,b)}function d(a){if(!angular.isObject(a))throw new TypeError('Parameter "permissionMap" has to be Object');if(angular.isUndefined(a.only)&&angular.isUndefined(a.except))throw new ReferenceError('Either "only" or "except" keys must me defined');if(!angular.isArray(a.only)&&!angular.isArray(a.except))throw new TypeError('Parameter "permissionMap" properties must be Array')}function e(b,c){var d=a.defer(),e=f(b.except,c);return a.all(e).then(function(b){return b.length?void d.reject(b):a.reject(null)})["catch"](function(){var e=f(b.only,c);a.all(e).then(function(a){d.resolve(a)})["catch"](function(a){d.reject(a)})}),d.promise}function f(c,d){var e=[];return angular.forEach(c,function(c){var f=a.defer();if(b.hasPermission(c)){var g=b.getPermission(c),h=g.validatePermission(d);h.then(function(){f.resolve(c)})["catch"](function(){f.reject(c)})}else f.reject(c);e.push(f.promise)}),e}this.authorize=c}])}(),function(){"use strict";angular.module("permission").directive("permission",["$log","Authorization",function(a,b){return{restrict:"A",link:function(c,d,e){try{b.authorize({only:c.$eval(e.only),except:c.$eval(e.except)},null).then(function(){d.removeClass("ng-hide")})["catch"](function(){d.addClass("ng-hide")})}catch(f){d.addClass("ng-hide"),a.error(f.message)}}}}])}(),function(){"use strict";var a=angular.module("permission",["ui.router"]);a.config(["$stateProvider",function(a){a.decorator("parent",function(a,b){return a.self.getState=function(){return a},b(a)})}]),a.run(["$rootScope","$state","$q","Authorization",function(a,b,c,d){a.$on("$stateChangeStart",function(e,f,g,h,i,j){function k(a){return!a.$$isAuthorizationFinished&&a.data&&a.data.permissions}function l(a){f=angular.extend({$$isAuthorizationFinished:a},f)}function m(){return x()||w()}function n(a){var c={only:[],except:[]},d=b.get(f.name).getState().path.reverse();return angular.forEach(d,function(a){k(a.self)&&(c=o(c,a.self.data.permissions))}),angular.isDefined(a.redirectTo)&&(c.redirectTo=a.redirectTo),c}function o(a,b){if(angular.isDefined(b.only)){var c=p(b.only);a.only=a.only.concat(c)}if(angular.isDefined(b.except)){var d=p(b.except);a.except=a.except.concat(d)}return a}function p(a){if(angular.isString(a))return[a];if(angular.isArray(a))return a;if(angular.isFunction(a))return a.call(null,f,g,j);throw new TypeError('Parameter "permissionMap" properties "only" and "except" must be either String, Array or Function')}function q(b){d.authorize(b,g).then(function(){a.$broadcast("$stateChangePermissionAccepted",f,g,j),r(f.name)})["catch"](function(c){a.$broadcast("$stateChangePermissionDenied",f,g,j),s(b.redirectTo,c)})}function r(c){b.go(c,g,angular.extend({},j,{notify:!1})).then(function(){a.$broadcast("$stateChangeSuccess",f,g,h,i,j)})}function s(a,b){angular.isFunction(a)&&t(a,b),angular.isObject(a)&&u(a,b),angular.isString(a)&&v(a)}function t(a,b){c.when(a.call(null,b)).then(function(a){if(!angular.isString(a))throw new TypeError('When used "redirectTo" as function, returned value must be string with state name');v(a)})}function u(a,b){if(!angular.isDefined(a["default"]))throw new ReferenceError('When used "redirectTo" as object, property "default" must be defined');var c=a[b];angular.isDefined(c)||(c=a["default"]),angular.isFunction(c)&&t(c,b),angular.isString(c)&&v(c)}function v(a){b.go(a,g,j)}function w(){return a.$broadcast("$stateChangeStart",f,g,h,i,j).defaultPrevented}function x(){return a.$broadcast("$stateChangePermissionStart",f,g,j).defaultPrevented}if(k(f)){if(l(!0),e.preventDefault(),!m()){var y=n(f.data.permissions);q(y)}}else l(!1)})}])}(),function(){"use strict";angular.module("permission").factory("Permission",["$q",function(a){function b(a,b){d(a,b),this.permissionName=a,this.validationFunction=b}function c(b){var c=a.defer();return b?c.resolve():c.reject(),c.promise}function d(a,b){if(!angular.isString(a))throw new TypeError('Parameter "permission" name must be String');if(!angular.isFunction(b))throw new TypeError('Parameter "validationFunction" must be Function')}return b.prototype.validatePermission=function(a){var b=this.validationFunction.call(null,a,this.permissionName);return angular.isFunction(b.then)||(b=c(b)),b},b}])}(),function(){"use strict";angular.module("permission").service("PermissionStore",["Permission",function(a){function b(a,b){console.warn('Function "defineRole" will be deprecated. Use "setPermission" instead'),d(a,b)}function c(a,b){console.warn('Function "defineManyRoles" will be deprecated. Use "setManyPermissions" instead'),e(a,b)}function d(b,c){l[b]=new a(b,c)}function e(a,b){if(!angular.isArray(a))throw new TypeError('Parameter "permissionNames" name must be Array');angular.forEach(a,function(a){d(a,b)})}function f(a){delete l[a]}function g(a){angular.forEach(a,function(a){delete l[a]})}function h(a){return angular.isDefined(l[a])}function i(a){return l[a]}function j(){return l}function k(){l=[]}var l={};this.defineRole=b,this.defineManyRoles=c,this.setPermission=d,this.setManyPermissions=e,this.removePermission=f,this.removeManyPermissions=g,this.hasPermission=h,this.getPermission=i,this.getPermissions=j,this.clearPermissions=k}])}();
//# sourceMappingURL=angular-permission.min.js.map